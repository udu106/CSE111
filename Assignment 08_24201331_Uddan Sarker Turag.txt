//Task 1

public class BBAStudent extends Student
{
  public BBAStudent()
  {
    super.setName("Default");
    super.setDepartment("BBA");
  }
  public BBAStudent(String m)
  {
    super.setName(m);
    super.setDepartment("BBA");
  }
}

// task 2

public class CheckingAccount extends Account
{
  public static int count = 0;
  
  public CheckingAccount(double m)
  {
    super (m);
    count++;
  }
  public CheckingAccount()
  {
    super(0.0);
    count++;
  }
}

//task 3

public class Dog extends Animal
{
  public String breed;
  
  public Dog(String a, int b, String c, String d)
  {
    super(a, b, c);
    this.breed = d;
  }
  @Override
  public String info()
  {
    return "Name: "+name+"\nAge: "+age+"\nColor: "+color+"\nBreed: "+breed;
  }
  public void makeSound()
  {
    System.out.println(color+" color "+name+" is barking");
  }
}

public class Cat extends Animal
{
  public String breed;
  
  public Cat(String a, int b, String c, String d)
  {
    super(a, b, c);
    this.breed = d;
  }
  @Override
  public String info()
  {
    return "Name: "+name+"\nAge: "+age+"\nColor: "+color+"\nBreed: "+breed;
  }
  public void makeSound()
  {
    System.out.println(color+" color "+name+" is meowing");
  }
}

//task 4

public class Vehicle2010 extends Vehicle
{
  public void moveLowerLeft()
  {
    super.moveDown();
    super.moveLeft();
  }
  public void moveUpperRight()
  {
    super.moveUp();
    super.moveRight();
  }
  public void moveLowerRight()
  {
    super.moveDown();
    super.moveRight();
  }
}

//task 5

public class ComplexNumber extends RealNumber
{
  public double imaginary = 1.0;;
  
  public ComplexNumber()
  {
    super(1.0);
  }
  public ComplexNumber(double m, double n)
  {
    super(m);
    this.imaginary = n;
  }
  @Override
  public String toString(){
    return "RealPart: " + realValue + "\nImaginaryPart:"+imaginary;
  }
}


// task 6

public class Manager extends Employee 
{
  public double bonus;
  public double final_salary;
  
  public Manager(String a, int b, int c, int d)
  {
    super(a, b, c);
    this.bonus = d;
  }
  
  public void calculateSalary() 
  {
    final_salary = getBaseSalary() + (getBaseSalary() * bonus / 100);
  }
  
  @Override
  public void displayInfo()
  {
    System.out.println("Name: " + name);
    System.out.println("Base Salary: $" + getBaseSalary());
    System.out.println("Work Hours: " + getHoursWorked());
    System.out.println("Bonus: " + bonus + " %");
    System.out.println("Final Salary: $" + final_salary);
  }
  
  public void requestIncrement(int m)
  {
    double s = 0.0;
    if (getHoursWorked() > 100)
    {
      s = getBaseSalary() + m;
      setBaseSalary(s);
      System.out.println("$" + m + " Increment approved.");
    }
    else if (getHoursWorked() > 80)
    {
      s = getBaseSalary() + (m / 2.0);
      setBaseSalary(s);
      System.out.println("$" + (m / 2) + " Increment approved.");
    }
    else
    {
      System.out.println("Increment denied.");
    }
  }
  
  public void setHoursWorked(int m)
  {
    super.setHoursWorked(m);
  }
}

public class Developer extends Employee
{
  public String language;
  public double final_salary;
  
  public Developer(String a, int b, int c, String d)
  {
    super(a, b, c);
    this.language = d;
  }
  public void calculateSalary()
  {
    if(language.equals("Java"))
    {
      final_salary = getBaseSalary() + 700;
    }
    else
    {
      final_salary = getBaseSalary();
    }
  }
  @Override
  public void displayInfo() {
    System.out.println("Name: " + name);
    System.out.println("Base Salary: $" + getBaseSalary());
    System.out.println("Work Hours: " + getHoursWorked());
    System.out.println("Language: " + language);
    System.out.println("Final Salary: $" + final_salary);
  }
}

// task 7

//task 8

public class KKTea extends Tea
{
  public int tea_beg;
  public static int total = 0;
  public static int regular = 0;
  
  public KKTea(int m, int n)
  {
    super("KK regular Tea", m);
    this.tea_beg = n;
  }
  public static void totalSales()
  {
    System.out.println("Total Sales: " + total);
    System.out.println("KK Regular Tea: " + regular);
    System.out.println("KK Flavoured Tea: "+KKFlavouredTea.flavour);
  }
  public static void updateSoldStatusRegular(KKTea m)
  {
    if (!m.status)
    {
      m.status = true;
      total++;
      regular++;
    }
  }
  
  @Override
  public void productDetail()
  {
    System.out.println("Name: " + name + ", Price: " + price);
    System.out.println("Status: " + status);
    System.out.println("Weight: " + (tea_beg*2)+", Tea Begs: "+tea_beg);
  }
}

public class KKFlavouredTea extends KKTea
{
  public static int flavour = 0;
  public int begs;
  
  public KKFlavouredTea(String a, int b, int c)
  {
    super(b, c);
    this.name = "KK "+a+" Tea";
    this.begs = c;
  }
  public static void updateSoldStatusFlavoured(KKFlavouredTea m)
  {
    if(!m.status)
    {
      m.status = true;
      total++;
      flavour++;
    }
  }
 public static void totalSalesFlavoured() 
 {
   System.out.println("KK Flavoured Tea: " + flavour);
 }
  @Override
  public void productDetail()
  {
    System.out.println("Name: " + name + ", Price: " + price);
    System.out.println("Status: " + status);
    System.out.println("Weight: " + (begs*2)+", Tea Begs: "+begs);
  }
}